import io.github.gradlenexus.publishplugin.InitializeNexusStagingRepository

buildscript {
  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "io.github.gradle-nexus:publish-plugin:1.0.0"
  }
}

plugins {
  id 'java'
  id 'groovy'
  id 'java-library'
  id 'signing'
  id 'idea'
  id 'maven-publish'
}

version project.file("version.txt").text.trim()

ext {
  isBuildSnapshot = version.endsWith('-SNAPSHOT')
  isReleaseVersion = !isBuildSnapshot
}

if (isReleaseVersion) {
  apply plugin: "io.github.gradle-nexus.publish-plugin"
  nexusPublishing {
    repositories {
      sonatype {
        if(project.hasProperty('mavenUser')) {
          username = mavenUser
          password = mavenPassword
        }
      }
    }
  }
}

subprojects { project ->
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'

  if (project.name.startsWith("plugin")) {
    apply plugin:'maven-publish'
    apply plugin:'signing'
    afterEvaluate {
      signing {
        required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
        sign publishing.publications.maven
      }
    }

    tasks.withType(Sign) {
      onlyIf { isReleaseVersion }
    }

    //do not generate extra load on Nexus with new staging repository if signing fails
    tasks.withType(InitializeNexusStagingRepository).configureEach {
      shouldRunAfter(tasks.withType(Sign))
    }
  }

}

repositories {
  mavenLocal()
  mavenCentral()
}

test {
  testLogging {
    exceptionFormat = 'full'
    showStandardStreams = true
  }
}